// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: helper_queries.sql

package db

import (
	"context"
)

const getUserByUsername = `-- name: GetUserByUsername :many
SELECT
       user_id,
    password,
    email,
    login_id
FROM
    tbl_user
WHERE
    login_id = $1 OR email = $1
`

type GetUserByUsernameRow struct {
	UserID   int32
	Password string
	Email    string
	LoginID  string
}

// Query to get the user by username (login_id or email)
func (q *Queries) GetUserByUsername(ctx context.Context, loginID string) ([]GetUserByUsernameRow, error) {
	rows, err := q.db.QueryContext(ctx, getUserByUsername, loginID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetUserByUsernameRow
	for rows.Next() {
		var i GetUserByUsernameRow
		if err := rows.Scan(
			&i.UserID,
			&i.Password,
			&i.Email,
			&i.LoginID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
