version: '3.7'

services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: speedpay
    ports:
      - "5432:5432"
    networks:
      - backend-network
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./dump:/opt/data-dump:rw
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "youruser"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
  mysql: 
    image: mysql:8.0-debian
    environment:
      - MYSQL_ROOT_PASSWORD=smartfalcon
    ports: 
     - 3306:3306
    volumes:
      - mysql-data:/var/lib/mysql
      - ./dump:/opt/data-dump

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - backend-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    command: ["entrypoint.sh", "dragonfly", "serve"]
    ports:
      - "50005:5005"
    networks:
      - backend-network
    restart: always
    healthcheck:
      test: ["CMD", "nc", "-zv", "dragonfly", "5005"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s

  # masterdata-service:
  #   build:
  #     context: ./masterdata-service
  #   ports:
  #     - "8081:8080"
  #   depends_on:
  #     - postgres
  #     # - redis
  #     - dragonfly
  #   environment:
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=youruser
  #     - DB_PASSWORD=yourpassword
  #     - DB_NAME=yourdb
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - DRAGONFLY_HOST=dragonfly
  #     - DRAGONFLY_PORT=5005
  #   networks:
  #     - backend-network
  #   restart: always

  # operator-service:
  #   build:
  #     context: ./operator-service
  #   ports:
  #     - "8082:8080"
  #   depends_on:
  #     - postgres
  #     # - redis 
  #     - dragonfly
  #   environment:
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_USER=youruser
  #     - DB_PASSWORD=yourpassword
  #     - DB_NAME=yourdb
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - DRAGONFLY_HOST=dragonfly
  #     - DRAGONFLY_PORT=5005
  #   networks:
  #     - backend-network
  #   restart: always

networks:
  backend-network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  mysql-data:
    driver: local
